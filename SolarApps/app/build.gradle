apply plugin: 'com.android.application'

def versionMajor = 1
def versionMinor = 1
def versionPatch = 2

android {
    signingConfigs {
        config {
            keyAlias 'key0'
            keyPassword 'Freshvegbox@2015'
            storeFile file('C:/Users/sriganes/Desktop/freshvegbox.jks')
            storePassword 'Freshvegbox@2015'
        }
    }
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.solar.apps"
        minSdkVersion 19
        targetSdkVersion 26
        //versionCode 2
       // versionName "1.1"
        vectorDrawables.useSupportLibrary = true
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        packagingOptions {
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/ASL2.0'
        }
        signingConfig signingConfigs.config
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }

    compileOptions {
        encoding "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}


repositories {
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation 'com.android.support:design:28.0.0'
    implementation "androidx.annotation:annotation:1.1.0"
   // implementation 'com.google.android.material:material:1.0.0'
   // implementation 'com.thanosfisherman.elvis:elvis:2.0'
   // implementation 'com.google.android.gms:play-services-auth:10.0.1'
    //implementation 'com.google.android.gms:play-services-gcm:10.2.1'
    //implementation 'com.google.firebase:firebase-core:16.0.1'
    //implementation 'com.google.firebase:firebase-database:16.0.1'
   // implementation 'com.google.firebase:firebase-storage:16.0.1'
   // implementation 'com.google.firebase:firebase-crash:16.0.1'
   // implementation 'com.google.firebase:firebase-auth:16.0.1'
   // implementation 'com.google.firebase:firebase-messaging:17.3.0'
    //implementation 'com.crashlytics.sdk.android:crashlytics:2.9.6'
    //implementation 'com.google.firebase:firebase-appindexing:16.0.1'

    testImplementation 'junit:junit:4.12'

    // image loading
    implementation 'com.facebook.fresco:fresco:0.14.1'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'

    implementation project(':library')
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    //implementation project(':chat21')

}
//apply plugin: 'com.google.gms.google-services'
//apply plugin: 'io.fabric'


configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '26.0.0'
            }
        }
    }
}
